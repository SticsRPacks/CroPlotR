% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stics_plotting.R
\name{plot.stics_simulation}
\alias{plot.stics_simulation}
\alias{autoplot.stics_simulation}
\title{Plot situations by group of simulation}
\usage{
\method{plot}{stics_simulation}(
  ...,
  obs = NULL,
  type = c("dynamic", "scatter"),
  plot = c("sim", "common", "obs", "all"),
  title = NULL
)

autoplot.stics_simulation(
  ...,
  obs = NULL,
  type = c("dynamic", "scatter"),
  plot = c("sim", "common", "obs", "all"),
  title = NULL
)
}
\arguments{
\item{...}{Simulation outputs (each element= model version), each being a named list of \code{data.frame} for each situation.
See examples.}

\item{obs}{A list (each element= situation) of observations \code{data.frame}s (named by situation)}

\item{type}{The type of plot requested, either "dynamic" (date in X, variable in Y) or scatter (simulated VS observed)}

\item{plot}{Which data to plot in priority when \code{type= "dynamic"}? See details.}

\item{title}{A vector of plot titles, named by situation. Use the situation name if \code{NULL}, recycled if length one.}
}
\value{
A (printed) list of ggplot objects, each element being a plot for a situation
}
\description{
simulation outputs for one or several situations with or without observations, eventually grouped
by a model version (or any group actually)
}
\details{
The \code{plot} argument can be:
\itemize{
\item "sim" (the default): all variables with simulations outputs, and observations when there are some
\item "common": variables with simulations outputs and observations in common (used when \code{type= "scatter"} )
\item "obs": all variables with obervations, and simulations outputs when there are some
\item "all": all variables with any obervations or simulations outputs
}
}
\note{
The plots titles are given by their situation name.
}
\examples{
\dontrun{
# Importing an example with three situations with observation:
workspace= system.file(file.path("extdata", "stics_example_1"), package = "CroPlotR")
situations= SticsRFiles::get_usms_list(usm_path = file.path(workspace,"usms.xml"))
sim= SticsRFiles::get_daily_results(workspace = workspace, usm_name = situations)
obs= SticsRFiles::get_obs(workspace =  workspace, usm_name = situations)

plot(sim,obs=obs)
}
}
